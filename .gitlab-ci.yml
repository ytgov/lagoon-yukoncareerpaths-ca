image: git.acromedia.com:4567/acro/code/docker:php8.1

include:
  - project: 'acro/code/standards'
    ref: master
    file: '/ci-templates/variables.yml'
  - project: 'acro/code/standards'
    ref: master
    file: '/ci-templates/jobs/phpunit-coverage.yml'
  - project: 'acro/code/standards'
    ref: master
    file: '/ci-templates/jobs/automated-tests-d8.yml'
  - project: 'acro/code/standards'
    ref: master
    file: '/ci-templates/jobs/build.yml'
  - project: 'acro/code/standards'
    ref: master
    file: '/ci-templates/jobs/code-standards.yml'
  - project: 'acro/code/standards'
    ref: master
    file: '/ci-templates/jobs/load-timer.yml'
  - project: 'acro/code/standards'
    ref: master
    file: '/ci-templates/jobs/php-debt.yml'
  - project: 'acro/code/standards'
    ref: master
    file: '/ci-templates/jobs/security-advisories.yml'
  - project: 'acro/code/standards'
    ref: 15-config-status-checks-should-verify-config-is-identical-not-look-for-different
    file: '/ci-templates/jobs/config-test.yml'
  - template: Code-Quality.gitlab-ci.yml

stages:
  - build
  - theme-build
  - test
  - deploy
  - pages

variables:
  extends: .default-variables
  SITENAME: Government Of Yukon - Recruitment Marketing Drupal

security-advisories:
  extends: .security-advisories
  needs: []

composer:
  stage: build
  only:
    - /^deploy\/.*/
  cache:
    key:
      files:
        - composer.lock
        - composer.json
      prefix:
        composer
    paths:
      - "${CI_PROJECT_DIR}/.composer"
  before_script:
    - composer config data-dir "${CI_PROJECT_DIR}/.composer"
    - composer config cache-dir "${CI_PROJECT_DIR}/.composer/cache"
  script:
    - composer install --no-interaction --no-dev --no-progress --ansi
  artifacts:
    expire_in: 3 days
    paths:
      - bin
      - vendor
      - web

composer-dev:
  stage: build
  cache:
    key:
      files:
        - composer.lock
        - composer.json
      prefix:
        composer
    paths:
      - "${CI_PROJECT_DIR}/.composer"
  before_script:
    - composer config data-dir "${CI_PROJECT_DIR}/.composer"
    - composer config cache-dir "${CI_PROJECT_DIR}/.composer/cache"
  script:
    - composer self-update
    - composer install --no-interaction --no-progress --ansi
  artifacts:
    expire_in: 90min
    paths:
      - bin
      - vendor
      - web

code-standards:
  extends: .code-standards
  stage: test
  needs: ["composer-dev"]
  script:
    - scripts/code-standards.sh

debt:
  extends: .php-debt
  allow_failure: true
  needs: ["composer-dev"]
  before_script:
    - export PATH="./bin:$PATH"
  script:
    - phpdebt web/modules/custom
    - phpdebt web/themes/custom/govt_yukon
    - phpdebt web/themes/custom/govt_yukon_claro
    - phpdebt web/themes/custom/govt_yukon_ocf

# Uncomment when custom modules have actual tests to run.
#phpunit:
#  extends: .phpunit-coverage
#  variables:
#    PHPUNIT_CONFIG_FILE: "$CI_PROJECT_DIR/phpunit.xml"
#    SYMFONY_DEPRECATIONS_HELPER: "disabled"
#  script:
#    - export PATH="$CI_PROJECT_DIR/vendor/bin:bin:$PATH"
#    - cd $CI_PROJECT_DIR
#    - command -v pcov && pcov clobber
#    - phpunit -c $PHPUNIT_CONFIG_FILE $TEST_TARGET_DIRECTORY --list-tests
#    - phpunit -c "${PHPUNIT_CONFIG_FILE}" --log-junit="${JUNIT_PATH}/junit.xml" --colors=never "${TEST_TARGET_DIRECTORY}" --coverage-html "${PHPUNIT_COVERAGE_PATH}/html"
#    # Gitlab expects all "filename" attributes to  be relative to the project root, so we need to do
#    # a bit of post-processing on the cobertura report so that gitlab can parse it.
#    - COBERTURA_SOURCE=$(grep -oPm1 "(?<=<source>)[^<]+" ${PHPUNIT_COVERAGE_PATH}/cobertura.xml)
#    - COBERTURA_PROJECT_ROOT=${COBERTURA_SOURCE#${CI_PROJECT_DIR}/}
#    - sed -i "s|filename=\"|filename=\"${COBERTURA_PROJECT_ROOT}\/|g" ${PHPUNIT_COVERAGE_PATH}/cobertura.xml
#  needs: ["composer-dev"]
