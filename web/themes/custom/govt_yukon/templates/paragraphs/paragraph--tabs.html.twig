{#
/**
 * @file
 * Paragraph Theme: Tabs.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('govt_yukon/bootstrap') }}
{% set component_prefix = 'comp-tabs' %}

{% set paragraph_id_value = '' %}
{% if paragraph.id.value %}
  {% set paragraph_id_value = paragraph.id.value ~ '-' %}
{% endif %}

{% set paragraph_created_time = '' %}
{% if paragraph.getCreatedTime() %}
  {% set paragraph_created_time = paragraph.getCreatedTime() %}
{% endif %}

{% set component_id = component_prefix ~ '--id--' ~ paragraph_id_value ~ paragraph_created_time %}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    component_prefix
  ]
%}

{%
  set tab_classes = [
    'nav',
    'nav-tabs'
  ]
%}

{%
  set tab_content_classes = [
    'tab-content'
  ]
%}

{% set tabs_attributes = create_attribute() %}
{% set tabs_attributes = tabs_attributes.addClass(tab_classes) %}
{% set tabs_attributes = tabs_attributes.setAttribute('id', component_id) %}

{% set tabs_content_attributes = create_attribute() %}
{% set tabs_content_attributes = tabs_content_attributes.addClass(tab_content_classes) %}
{% set tabs_content_attributes = tabs_content_attributes.setAttribute('id', component_id ~ '-content') %}

{# Set langcode so we can reference it within entities. #}
{% set langcode = paragraph.get('langcode').value %}

{# Set tab layout. #}
{% if paragraph.field_tabs_layout.value == 'vertical' %}
  {% set attributes = attributes.addClass('component-tabs--vertical') %}
  {% set tabs_attributes = tabs_attributes.addClass('nav-tabs--vertical') %}
{% endif %}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content_wrapper %}
      {% block content %}
        <div class="{{ component_prefix ~ '__tabs' }}">
          {# Tabs. #}
          <ul{{ tabs_attributes }} role="tablist">
            {% if paragraph.field_tabs.0.entity.field_title.value %}
              {% for tab in paragraph.field_tabs %}
                {% if langcode and tab.entity.hasTranslation(langcode) %}
                  {% set tab_entity = tab.entity.getTranslation(langcode) %}
                {% else %}
                  {% set tab_entity = tab.entity %}
                {% endif %}

                {% set tab_field_title = tab_entity.field_title %}
                {% set tab_id_value = paragraph_created_time %}
                {% if tab_entity.id.value %}
                  {% set tab_id_value = tab_entity.id.value %}
                {% endif %}
                {% set tab_id = tab_field_title.value|clean_class ~ '-' ~ tab_id_value %}
                {% set tab_pane_id = tab_field_title.value|clean_class ~ '-pane-' ~ tab_id_value %}

                {# Set active tab if it's the first tab. #}
                {% if loop.first %}
                  {% set tab_button_class = ' active' %}
                {% else %}
                  {% set tab_button_class = '' %}
                {% endif %}

                <li class="nav-item" role="presentation">
                  <button class="nav-link{{ tab_button_class }}" id="{{ tab_id }}" data-bs-toggle="tab" data-bs-target="#{{ tab_pane_id }}" type="button" role="tab" aria-controls="{{ tab_pane_id }}" aria-selected="true">{{ tab_field_title|view }}</button>
                </li>
              {% endfor %}
            {% endif %}
          </ul>
          {# Tab Content. #}
          <div{{ tabs_content_attributes }}>
            {% if paragraph.field_tabs.0.entity.field_title.value %}
              {% for tab in paragraph.field_tabs %}
                {% if langcode and tab.entity.hasTranslation(langcode) %}
                  {% set tab_entity = tab.entity.getTranslation(langcode) %}
                {% else %}
                  {% set tab_entity = tab.entity %}
                {% endif %}

                {% set tab_field_title = tab_entity.field_title %}
                {% set tab_id_value = paragraph_created_time %}
                {% if tab_entity.id.value %}
                  {% set tab_id_value = tab_entity.id.value %}
                {% endif %}
                {% set tab_id = tab_field_title.value|clean_class ~ '-' ~ tab_id_value %}
                {% set tab_pane_id = tab_field_title.value|clean_class ~ '-pane-' ~ tab_id_value %}
                {% set tab_pane_body = tab_entity.field_components %}

                {# Set active tab if it's the first tab. #}
                {% if loop.first %}
                  {% set tab_pane_class = 'tab-pane fade show active' %}
                {% else %}
                  {% set tab_pane_class = 'tab-pane fade' %}
                {% endif %}

                <div id="{{ tab_pane_id }}" class="{{ tab_pane_class }}" role="tabpanel" aria-labelledby="{{ tab_id }}" tabindex="0">
                  <h2 class="{{ component_prefix ~ '__pane-title' }}">{{ tab_field_title|view }}</h2>
                  {{ tab_pane_body|view }}
                </div>
              {% endfor %}
            {% endif %}
          </div>
          {# / Tab Content. #}
        </div>
      {% endblock content %}
    {% endblock content_wrapper %}
  </div>
{% endblock paragraph %}
